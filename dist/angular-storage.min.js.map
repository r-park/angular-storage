{"version":3,"sources":["angular-storage.min.js"],"names":["angular","StorageProvider","storageType","STORAGE_TYPE_LOCAL","this","setStorageType","type","$get","$window","StorageService","storage","service","get","key","getItem","getObject","JSON","parse","put","value","setItem","putObject","stringify","remove","removeItem","clear","keys","i","length","Array","STORAGE_TYPE_SESSION","module","provider","config","$sessionStorageProvider","window"],"mappings":"CAAC,SAASA,GACV,YAqBA,SAASC,KAKP,GAAIC,GAAcC,CAMlBC,MAAKC,eAAiB,SAASC,GAC7BJ,EAAcI,GAOhBF,KAAKG,MAAQ,UAAW,SAASC,GAC/B,MAAO,IAAIC,GAAeD,EAASN,KAYvC,QAASO,GAAeD,EAASN,GAK/B,GAAIQ,GAAUF,EAAQN,GAGlBS,GAMFC,IAAM,SAASC,GACb,MAAOH,GAAQI,QAAQD,IAQzBE,UAAY,SAASF,GACnB,MAAOG,MAAKC,MAAMP,EAAQI,QAAQD,KASpCK,IAAM,SAASL,EAAKM,GAElB,MADAT,GAAQU,QAAQP,EAAKM,GACdf,MASTiB,UAAY,SAASR,EAAKM,GAExB,MADAT,GAAQU,QAAQP,EAAKG,KAAKM,UAAUH,IAC7Bf,MAQTmB,OAAS,SAASV,GAEhB,MADAH,GAAQc,WAAWX,GACZT,MAOTqB,MAAQ,WAEN,MADAf,GAAQe,QACDrB,MAOTsB,KAAO,WAIL,IAHA,GAAIC,GAAIjB,EAAQkB,OACZF,EAAO,GAAIG,OAAMF,GAEdA,KACLD,EAAKC,GAAKjB,EAAQG,IAAIc,EAGxB,OAAOD,IAOTE,OAAS,WACP,MAAOlB,GAAQkB,QAMnB,OAAOjB,GAhJT,GAAIR,GAAuB,eACvB2B,EAAuB,gBAG3B9B,GACG+B,OAAO,sBACPC,SAAS,gBAAiB/B,GAC1B+B,SAAS,kBAAmB/B,GAC5BgC,QAAQ,0BAA2B,SAASC,GAC3CA,EAAwB7B,eAAeyB,OA0IzCK,OAAOnC","file":"angular-storage.min.js","sourcesContent":["(function(angular){\n'use strict';\n\n\nvar STORAGE_TYPE_LOCAL   = 'localStorage',\n    STORAGE_TYPE_SESSION = 'sessionStorage';\n\n\nangular\n  .module('angular-storage', [])\n  .provider('$localStorage', StorageProvider)\n  .provider('$sessionStorage', StorageProvider)\n  .config(['$sessionStorageProvider', function($sessionStorageProvider){\n    $sessionStorageProvider.setStorageType(STORAGE_TYPE_SESSION);\n  }]);\n\n\n\n/**\n * @name StorageProvider\n * @constructor\n */\nfunction StorageProvider() {\n\n  /**\n   * @type {string}\n   */\n  var storageType = STORAGE_TYPE_LOCAL;\n\n\n  /**\n   * @param {string} type\n   */\n  this.setStorageType = function(type) {\n    storageType = type;\n  };\n\n\n  /**\n   * @returns {Storage}\n   */\n  this.$get = ['$window', function($window){\n    return new StorageService($window, storageType);\n  }];\n\n}\n\n\n\n/**\n * @name StorageService\n * @param $window\n * @param {string} storageType\n */\nfunction StorageService($window, storageType) {\n\n  /**\n   * @type {Storage} window.localStorage | window.sessionStorage\n   */\n  var storage = $window[storageType];\n\n\n  var service = {\n\n    /**\n     * @param {string} key\n     * @returns {string}\n     */\n    get : function(key) {\n      return storage.getItem(key);\n    },\n\n\n    /**\n     * @param {string} key\n     * @returns {Object}\n     */\n    getObject : function(key) {\n      return JSON.parse(storage.getItem(key));\n    },\n\n\n    /**\n     * @param {string} key\n     * @param {boolean|number|string} value\n     * @returns {service}\n     */\n    put : function(key, value) {\n      storage.setItem(key, value);\n      return this;\n    },\n\n\n    /**\n     * @param {string} key\n     * @param {Object} value\n     * @returns {service}\n     */\n    putObject : function(key, value) {\n      storage.setItem(key, JSON.stringify(value));\n      return this;\n    },\n\n\n    /**\n     * @param {string} key\n     * @returns {service}\n     */\n    remove : function(key) {\n      storage.removeItem(key);\n      return this;\n    },\n\n\n    /**\n     * @returns {service}\n     */\n    clear : function() {\n      storage.clear();\n      return this;\n    },\n\n\n    /**\n     * @returns {Array.<string>}\n     */\n    keys : function() {\n      var i = storage.length,\n          keys = new Array(i);\n\n      while (i--) {\n        keys[i] = storage.key(i);\n      }\n\n      return keys;\n    },\n\n\n    /**\n     * @returns {number}\n     */\n    length : function() {\n      return storage.length;\n    }\n\n  };\n\n\n  return service;\n\n}\n}(window.angular));"],"sourceRoot":"/source/"}